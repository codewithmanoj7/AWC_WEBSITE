<div class="gov-top-bar">
    <div class="container-fluid">
        <div class="row">
            <div class="col-md-12">

                <div class="top-options-wrapper">
                    <!-- LEFT SIDE -->
                    <div class="top-options-left">
                        <a href="/sitemap" class="top-link">Sitemap</a>
                        <span class="separator">|</span>
                        <a href="/faqs" class="top-link">FAQs</a>
                        <span class="separator">|</span>
                        <a href="#main-content" class="skip-link top-link">Skip to Main Content</a>
                    </div>

                    <!-- RIGHT SIDE (keep your existing items here) -->
                    <div class="top-options-right">
                        <div class="dropdown-container">
                            <button class="dropdown-btn" onclick="toggleDropdown('languageDropdown')">
                                <i class="fa fa-globe"></i> Language <i class="fa fa-chevron-down"></i>
                            </button>
                            <div class="dropdown-content" id="languageDropdown">
                                <a href="#" onclick="setLanguage('en')" class="lang-option active">English</a>
                                <a href="#" onclick="setLanguage('hi')" class="lang-option">हिंदी</a>
                            </div>
                        </div>

                        <span class="separator">|</span>

                        <!-- Theme Dropdown -->
                        <div class="dropdown-container">
                            <button class="dropdown-btn" onclick="toggleDropdown('themeDropdown')">
                                <i class="fa fa-paint-brush"></i> Theme <i class="fa fa-chevron-down"></i>
                            </button>
                            <div class="dropdown-content" id="themeDropdown">
                                <a href="#" onclick="setTheme('light')" class="theme-option">
                                    <span class="theme-preview light-preview"></span> Light
                                </a>
                                <a href="#" onclick="setTheme('blue')" class="theme-option">
                                    <span class="theme-preview blue-preview"></span> Blue
                                </a>
                                <a href="#" onclick="setTheme('dark')" class="theme-option">
                                    <span class="theme-preview dark-preview"></span> Dark
                                </a>
                            </div>
                        </div>

                        <span class="separator">|</span>

                        <!-- Accessibility Dropdown -->
                        <div class="dropdown-container">
                            <button class="dropdown-btn" onclick="toggleDropdown('accessibilityDropdown')">
                                <i class="fa fa-universal-access"></i> Accessibility <i class="fa fa-chevron-down"></i>
                            </button>
                            <div class="dropdown-content" id="accessibilityDropdown">
                                <div class="font-controls">
                                    <span class="dropdown-label">Font Size:</span>
                                    <div class="font-control-group">
                                        <a href="#" onclick="decreaseFontSize()" class="font-control" title="Decrease Font Size">A-</a>
                                        <a href="#" onclick="resetFontSize()" class="font-control active" title="Normal Font Size">A</a>
                                        <a href="#" onclick="increaseFontSize()" class="font-control" title="Increase Font Size">A+</a>
                                    </div>
                                </div>
                                <a href="#" class="accessibility-option">
                                    <i class="fa fa-volume-up"></i> Screen Reader Access
                                </a>
                                <a href="#" class="accessibility-option">
                                    <i class="fa fa-eye"></i> High Contrast
                                </a>
                            </div>
                        </div>

                        <!-- Search Box -->
                        <div class="search-container">
                            <input type="text" class="search-input" placeholder="Search..." />
                            <button class="search-button" title="Search">
                                <i class="fa fa-search"></i>
                            </button>
                        </div>

                        <!-- Login Button -->
                        <a href="/auth/login" class="login-button">
                            <i class="fa fa-lock"></i> <span>Login</span>
                        </a>				<!-- No change required here -->
                    </div>
                </div>



            </div>
        </div>
    </div>
</div>


<style>
	/* Government Top Bar Styles - Updated */
	.gov-top-bar {
		background-color: #c40000;
		padding: 8px 0;
		font-size: 12px;
		position: relative;
		z-index: 1000;
	}

	.login-button {
		display: inline-block;
		background-color: #ffffff;
		color: #123456;
		padding: 6px 18px; /* slightly smaller padding */
		margin-left: 10px;
		border-radius: 18px; /* slightly smaller curve */
		font-weight: 600;
		font-size: 14px; /* slightly smaller text */
		text-decoration: none;
		box-shadow: 0 1px 4px rgba(0, 0, 0, 0.1); /* subtle shadow */
		transition: background-color 0.3s ease, color 0.3s ease;
	}

		.login-button:hover {
			background-color: #123456;
			color: #ffffff;
			text-decoration: none;
		}

		.login-button i {
			margin-right: 6px;
			font-size: 14px; /* slightly smaller icon */
		}



	.search-container {
		display: inline-flex;
		align-items: center;
		border: 1px solid #ccc;
		border-radius: 20px;
		overflow: hidden;
		background-color: #fff;
		margin-left: 10px;
	}

	.search-input {
		border: none;
		padding: 5px 10px;
		outline: none;
		width: 150px;
		font-size: 14px;
	}

	.search-button {
		background-color: transparent;
		border: none;
		padding: 5px 10px;
		color: #123456;
		cursor: pointer;
		transition: background-color 0.2s ease;
	}

		.search-button:hover {
			background-color: #eee;
		}

	.top-options-wrapper {
		display: flex;
		justify-content: space-between;
		align-items: center;
		flex-wrap: wrap;
	}

	.top-options-left,
	.top-options-right {
		display: flex;
		align-items: center;
		gap: 5px;
	}



	.top-options {
		display: flex;
		align-items: center;
		justify-content: flex-end;
		gap: 5px;
	}

	.top-link {
		color: #ffffff;
		text-decoration: none;
		padding: 4px 8px;
		border-radius: 3px;
		transition: all 0.3s ease;
		font-size: 12px;
	}

		.top-link:hover {
			color: #ffcccc;
			text-decoration: none;
			background-color: rgba(255, 255, 255, 0.1);
		}

	.separator {
		color: #ffffff;
		margin: 0 5px;
	}

	/* Dropdown Containers */
	.dropdown-container {
		position: relative;
		display: inline-block;
	}

	.dropdown-btn {
		background: none;
		border: none;
		color: #ffffff;
		padding: 4px 8px;
		cursor: pointer;
		border-radius: 3px;
		transition: all 0.3s ease;
		font-size: 12px;
	}

		.dropdown-btn:hover {
			background-color: rgba(255, 255, 255, 0.1);
			color: #ffcccc;
		}

	.dropdown-content {
		display: none;
		position: absolute;
		background-color: #ffffff;
		min-width: 180px;
		box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
		z-index: 1001;
		border-radius: 4px;
		right: 0;
		top: 100%;
		margin-top: 2px;
	}

		.dropdown-content.show {
			display: block;
		}

		.dropdown-content a {
			color: #333;
			padding: 8px 12px;
			text-decoration: none;
			display: block;
			font-size: 12px;
			transition: background-color 0.3s ease;
		}

			.dropdown-content a:hover {
				background-color: #f1f1f1;
			}

	/* Language Options */
	.lang-option.active {
		background-color: #990000;
		color: #ffffff;
	}

	/* Theme Options */
	.theme-option {
		display: flex;
		align-items: center;
		gap: 8px;
	}

	.theme-preview {
		width: 16px;
		height: 16px;
		border-radius: 2px;
		border: 1px solid #ddd;
	}

	.light-preview {
		background-color: #ffffff;
	}

	.blue-preview {
		background-color: #007bff;
	}

	.dark-preview {
		background-color: #343a40;
	}

	/* Accessibility Options */
	.font-controls {
		padding: 8px 12px;
		border-bottom: 1px solid #eee;
	}

	.dropdown-label {
		font-size: 11px;
		color: #666;
		display: block;
		margin-bottom: 5px;
	}

	.font-control-group {
		display: flex;
		gap: 2px;
	}

	.font-control {
		display: inline-block;
		width: 20px;
		height: 20px;
		text-align: center;
		line-height: 18px;
		border: 1px solid #dee2e6;
		color: #495057;
		text-decoration: none;
		font-weight: bold;
		border-radius: 3px;
		transition: all 0.3s ease;
		font-size: 10px;
	}

		.font-control:hover, .font-control.active {
			background-color: #990000;
			color: white;
			border-color: #990000;
			text-decoration: none;
		}

	.accessibility-option {
		display: flex;
		align-items: center;
		gap: 8px;
	}


	.gov-top-bar .container-fluid,
	.gov-top-bar .row,
	.gov-top-bar .col-md-12 {
		padding-left: 0 !important;
		padding-right: 0 !important;
		margin-left: 0 !important;
		margin-right: 0 !important;
	}



	/* Skip link styles */
	.skip-link:focus {
		background: rgba(255, 255, 255, 0.2);
		color: #ffffff;
		text-decoration: none;
	}

	/* Blue theme styles */
	.blue-theme {
		background-color: #f0f8ff;
	}

		.blue-theme .site-header {
			background-color: #0056b3;
		}

		.blue-theme .navbar-nav li a {
			color: #ffffff !important;
		}

		.blue-theme .dropdown-menu {
			background-color: #e3f2fd;
			border-color: #0056b3;
		}

			.blue-theme .dropdown-menu li a {
				color: #0056b3;
			}

				.blue-theme .dropdown-menu li a:hover {
					background-color: #bbdefb;
				}

	/* Dark theme styles */
	.dark-theme {
		background-color: #2c2c2c;
		color: #ffffff;
	}

		.dark-theme .site-header {
			background-color: #1a1a1a;
		}

		.dark-theme .navbar-nav li a {
			color: #ffffff !important;
		}

		.dark-theme .dropdown-menu {
			background-color: #3c3c3c;
			border-color: #555;
		}

			.dark-theme .dropdown-menu li a {
				color: #ffffff;
			}

				.dark-theme .dropdown-menu li a:hover {
					background-color: #555;
				}

	/* Font size adjustment classes */
	.font-small {
		font-size: 0.85em;
	}

	.font-normal {
		font-size: 1em;
	}

	.font-large {
		font-size: 1.15em;
	}

	.font-xlarge {
		font-size: 1.3em;
	}

	/* Footer styles (existing) */
	.footer-menu {
		display: flex;
		flex-wrap: wrap;
		justify-content: space-between;
		gap: 20px;
	}

	.footer-links {
		flex: 1 1 18%;
		min-width: 150px;
	}

		.footer-links ul {
			list-style: none;
			padding: 0;
			margin: 0;
		}

			.footer-links ul li {
				margin-bottom: 6px;
			}

				.footer-links ul li a {
					color: #fff;
					text-decoration: none;
					font-size: 14px;
				}

			.footer-links ul.social {
				display: flex;
				gap: 10px;
			}

				.footer-links ul.social li {
					margin: 0;
				}

					.footer-links ul.social li a i {
						font-size: 18px;
						color: #fff;
						transition: color 0.3s ease;
					}

					.footer-links ul.social li a:hover i {
						color: #ccc;
					}
</style>




@* @inject IAuthenticationStateService AuthenticationState
@inject IPermissionStylingService PermissionStyling
@inject IJSRuntime JSRuntime
@rendermode InteractiveServer


<div class="top-row">
    <div class="container-fluid" style="overflow: hidden; display: table; width: 100%;">

        <!-- Left: Logo, Title and Mobile Menu Toggle -->
        <div style="display: table-cell; vertical-align: middle;">
            <button class="mobile-menu-toggle visible-xs-inline-block" @onclick="ToggleMobileMenu" style="margin-right: 15px; background: none; border: none;">
                <i class="fa fa-bars"></i>
            </button>

            <img src="/img/logo.png" alt="Army War College Logo" style="height: 40px; margin-right: 10px;" />
            <div style="display: inline-block;">
                <h5 style="margin: 0;">Army War College</h5>
                <small class="hidden-xs">Mhow, Madhya Pradesh</small>
            </div>
        </div>

        <!-- Center: Date & Time (Hidden on small screens) -->
        <div class="hidden-xs text-center" style="display: table-cell; vertical-align: middle;">
            <span style="margin-right: 20px;"><i class="fa fa-clock-o"></i> <span id="current-time">@DateTime.Now.ToString("HH:mm")</span></span>
            <span><i class="fa fa-calendar"></i> @DateTime.Now.ToString("dd MMM yyyy")</span>
        </div>

        <!-- Right: User Info -->
        <div style="display: table-cell; vertical-align: middle; text-align: right;">

            <!-- Notification Bell -->
            <div class="hidden-xs" style="display: inline-block; margin-right: 15px;">
                <button class="btn btn-link" title="Notifications" style="position: relative;">
                    <i class="fa fa-bell"></i>
                    <span class="badge" style="position: absolute; top: -5px; right: -10px; background-color: red;">3</span>
                </button>
            </div>

            <!-- User Dropdown -->
            <div class="dropdown" style="display: inline-block; margin-right: 10px;">
                <button class="btn btn-default dropdown-toggle" type="button" data-toggle="dropdown">
                    @{
                        var initials = $"{AuthenticationState.User?.FirstName?.FirstOrDefault()}{AuthenticationState.User?.LastName?.FirstOrDefault()}";
                    }
                    <span class="avatar-text">@initials</span>
                    <span class="caret"></span>
                </button>
                <ul class="dropdown-menu">
                    <li class="dropdown-header">
                        <div>
                            <strong>@AuthenticationState.User?.FirstName @AuthenticationState.User?.LastName</strong><br />
                            <small>@AuthenticationState.User?.ICnumber</small>
                        </div>
                    </li>
                    <li class="divider"></li>
                    <li><a href="/profile"><i class="fa fa-user"></i> My Profile</a></li>
                    <li><a href="/settings"><i class="fa fa-gear"></i> Settings</a></li>
                    <li><a href="/help"><i class="fa fa-question-circle"></i> Help & Support</a></li>
                    <li class="divider"></li>
                    <li><a href="javascript:void(0)" class="text-danger" @onclick="InitiateLogout"><i class="fa fa-sign-out"></i> Sign Out</a></li>
                </ul>
            </div>

            <!-- Optional Sign Out Button -->
            <button class="btn btn-danger hidden-xs" @onclick="InitiateLogout" disabled="@_isLoggingOut">
                @if (_isLoggingOut)
                {
                    <i class="fa fa-spinner fa-spin"></i> <h4>Signing Out</h4>
                }
                else
                {
                    <i class="fa fa-sign-out"></i> <h4>Sign Out</h4>
                }
            </button>
        </div>
    </div>
</div>

<!-- Logout Modal -->
@if (_showLogoutModal)
{
    <div class="modal fade in" style="display: block; background-color: rgba(0,0,0,0.5);">
        <div class="modal-dialog" style="margin-top: 15%;">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" @onclick="CancelLogout">&times;</button>
                    <h4 class="modal-title">Confirm Sign Out</h4>
                </div>
                <div class="modal-body">
                    <p>Are you sure you want to sign out?</p>
                </div>
                <div class="modal-footer">
                    <button class="btn btn-default" @onclick="CancelLogout">Cancel</button>
                    <button class="btn btn-danger" @onclick="ConfirmLogout">Sign Out</button>
                </div>
            </div>
        </div>
    </div>
}

@code {
    private bool _isLoggingOut = false;
    private bool _showLogoutModal = false;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            // Start the clock update timer
            await JSRuntime.InvokeVoidAsync("startClock");
        }
    }

    private void ToggleMobileMenu()
    {
        // This would trigger mobile menu toggle
        JSRuntime.InvokeVoidAsync("toggleMobileMenu");
    }

    private void InitiateLogout()
    {
        _showLogoutModal = true;
        StateHasChanged();
    }

    private void CancelLogout()
    {
        _showLogoutModal = false;
        StateHasChanged();
    }

    private async Task ConfirmLogout()
    {
        _isLoggingOut = true;
        _showLogoutModal = false;
        StateHasChanged();

        // Add a small delay for better UX
        await Task.Delay(500);

        // Trigger actual logout
        await JSRuntime.InvokeVoidAsync("performLogout");
    }
}

<script>
    window.startClock = () => {
        setInterval(() => {
            const timeElement = document.getElementById('current-time');
            if (timeElement) {
                timeElement.textContent = new Date().toLocaleTimeString('en-US', {
                    hour12: false,
                    hour: '2-digit',
                    minute: '2-digit'
                });
            }
        }, 1000);
    };

    window.toggleMobileMenu = () => {
        const sidebar = document.querySelector('.sidebar');
        if (sidebar) {
            sidebar.classList.toggle('show');
        }
    };

    window.performLogout = () => {
        document.cookie = 'AccessCookie=; expires=Thu, 01 Jan 1970 00:00:00 UTC; path=/;';
        window.location.href = '/auth/login';
    };
</script>
 *@