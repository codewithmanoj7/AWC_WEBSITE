@inherits LayoutComponentBase
@inject IAuthenticationStateService AuthenticationState
@inject IPermissionStylingService PermissionStyling

<PageTitle>Army War College, Mhow</PageTitle>

<!-- FontAwesome 4 CDN -->

<style>
    body {
        margin: 0;
        background-color: #f4f6f9;
    }

    .topbar {
        background-color: #c40000;
        color: white;
        padding: 18px 30px;
        font-size: 1.2rem;
        font-weight: 600;
        height: 70px;
        display: flex;
        justify-content: space-between;
        align-items: center;
        box-shadow: 0 2px 5px rgba(0,0,0,0.1);
        position: relative;
        z-index: 1000;
    }

    .topbar-left {
        display: flex;
        align-items: center;
        gap: 15px;
    }

    .mobile-menu-toggle {
        display: none;
        background: none;
        border: none;
        color: white;
        font-size: 1.5rem;
        cursor: pointer;
        padding: 5px;
    }

    .topbar-title {
        color: white;
        font-size: 2rem;
        font-weight: 600;
    }

    .user-info {
        background-color: rgba(255, 255, 255, 0.1);
        border-radius: 30px;
        padding: 5px 12px;
        font-size: 14px;
    }

    .topbar .btn-outline-light {
        color: #fff;
        border-color: #fff;
        transition: all 0.2s ease;
        font-size: 14px;
    }

        .topbar .btn-outline-light:hover {
            background-color: #fff;
            color: #c40000;
        }

    .fa-sign-out {
        font-size: 16px;
    }

    .layout-container {
        display: flex;
        height: calc(100vh - 70px);
        position: relative;
    }

    .sidebar {
        width: 240px;
        background-color: #ffffff;
        border-right: 1px solid #ddd;
        padding: 25px 15px;
        transition: transform 0.3s ease-in-out;
        z-index: 999;
    }

        .sidebar a {
            color: #333;
            display: flex;
            align-items: center;
            gap: 10px;
            padding: 12px 15px;
            margin-bottom: 10px;
            text-decoration: none;
            border-radius: 5px;
            font-size: 15px;
            transition: background 0.2s ease-in-out;
        }

            .sidebar a:hover {
                background-color: #e8f0fe;
                color: #007bff;
            }

    .main-content {
        flex: 1;
        padding: 0px;
        background-color: #f4f6f9;
        overflow-y: auto;
        transition: margin-left 0.3s ease-in-out;
    }

    .content {
        background-color: #fff;
        padding: 25px;
        border-radius: 0px;
        box-shadow: 0 2px 8px rgba(0,0,0,0.05);
    }

    /* Icon size consistency */
    .sidebar i {
        width: 20px;
        text-align: center;
    }

    .user-action-box {
        background-color: rgba(255, 255, 255, 0.1);
        border-radius: 30px;
        font-size: 14px;
        color: #fff;
        display: flex;
        align-items: center;
        justify-content: center;
        gap: 15px;
    }

    .user-initials-circle {
        width: 40px;
        height: 40px;
        background-color: #ffffff;
        color: #c40000;
        font-weight: 600;
        font-size: 16px;
        border-radius: 50%;
        display: flex;
        align-items: center;
        justify-content: center;
        text-transform: uppercase;
        border: none;
    }

        .user-initials-circle:focus {
            box-shadow: none;
        }

    .role-badge {
        background-color: #ffffff !important;
        color: #333 !important;
        border-radius: 20px;
        font-weight: 500;
        padding: 4px 12px;
        font-size: 13px;
    }

    .dropdown-menu {
        min-width: 160px;
        font-size: 14px;
    }

    .logout-button {
        color: #dc3545;
        font-weight: 500;
        display: inline-flex;
        align-items: center;
        justify-content: center;
        gap: 6px;
        text-align: center;
        width: auto;
    }

    .sidebar-overlay {
        display: none;
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background-color: rgba(0, 0, 0, 0.5);
        z-index: 998;
    }

  
</style>

<AuthorizeView>
    <Authorized>
        <div class="topbar">
            <div class="topbar-left">
                <button class="mobile-menu-toggle" @onclick="ToggleSidebar">
                    <i class="fa fa-bars"></i>
                </button>
                <img src="/assets/images/logo.png" alt="Logo" style="height: 60px; margin-right: 10px;" />
                <span class="topbar-title">Army War College, Mhow</span>
            </div>

            <div class="user-action-box">
                <!-- Profile Dropdown -->
                <div class="dropdown">
                    <button class="btn user-initials-circle dropdown-toggle" type="button" id="userDropdown" data-bs-toggle="dropdown" aria-expanded="false">
                        @((AuthenticationState.User?.FirstName?[0].ToString() ?? "") + (AuthenticationState.User?.LastName?[0].ToString() ?? ""))
                    </button>
                    <ul class="dropdown-menu dropdown-menu-end" aria-labelledby="userDropdown">
                        <li><a class="dropdown-item" href="/profile"><i class="fa fa-user"></i>&nbsp; My Profile</a></li>
                        <li><hr class="dropdown-divider" /></li>
                        <li class="text-center">
                            <button class="dropdown-item logout-button" @onclick="HandleLogout">
                                <i class="fa fa-sign-out"></i> Logout
                            </button>
                        </li>
                    </ul>
                </div>

                <!-- Role Badge -->
                @if (AuthenticationState.User?.Permissions != null)
                {
                    <span class="badge role-badge @PermissionStyling.GetBootstrapClassesForPermission(AuthenticationState.User.Permissions)">
                        @PermissionStyling.GetDisplayTextForPermission(AuthenticationState.User.Permissions)
                    </span>
                }
            </div>
        </div>

        <!-- Sidebar Overlay for mobile -->
        <div class="sidebar-overlay @(isSidebarOpen ? "show" : "")" @onclick="CloseSidebar"></div>

        <div class="layout-container">
            <div class="sidebar @PermissionStyling.GetBootstrapClassesForPermission(AuthenticationState.User.Permissions) @(isSidebarOpen ? "open" : "")">
                <a href="/" @onclick="CloseSidebar"><i class="fa fa-home"></i> Dashboard</a>
                <a href="/users" @onclick="CloseSidebar"><i class="fa fa-users"></i> Users</a>
                <a href="/notifications" @onclick="CloseSidebar"><i class="fa fa-bell"></i> Notifications</a>
                <a href="/settings" @onclick="CloseSidebar"><i class="fa fa-cog"></i> Settings</a>
                <a href="/logout" @onclick="CloseSidebar"><i class="fa fa-sign-out"></i> Logout</a>
            </div>
            <div class="main-content">
                <article class="content">
                    @Body
                </article>
            </div>
        </div>
    </Authorized>
    <NotAuthorized>
        <NotAuthorizedPage />
    </NotAuthorized>
</AuthorizeView>

@code {
    private bool isSidebarOpen = false;

    private void ToggleSidebar()
    {
        isSidebarOpen = !isSidebarOpen;
    }

    private void CloseSidebar()
    {
        isSidebarOpen = false;
    }

    private async Task HandleLogout()
    {
        await JSRuntime.DeleteCookie("AccessCookie");
        NavManager.NavigateTo("/auth/login", forceLoad: true);
    }

    [Inject] public IJSRuntime JSRuntime { get; set; }
    [Inject] public NavigationManager NavManager { get; set; }
}